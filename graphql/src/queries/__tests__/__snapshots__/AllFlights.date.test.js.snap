// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`all flights dates should return response 1`] = `
Object {
  "data": Object {
    "allFlights": Object {
      "edges": Array [
        Object {
          "node": Object {
            "legs": Array [
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOjMxMzIyNTIxMA==",
              },
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOjMxMzM1NzM5Ng==",
              },
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOkVKMjkyODU2MjA4OV80MjE4MDIzODg=",
              },
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOkVKMjkyODU2MjA4OV8zNTk1MTM3NjU=",
              },
            ],
          },
        },
        Object {
          "node": Object {
            "legs": Array [
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOkVKMTU3NDYxODM1M18zMDc5MzkyNjQ=",
              },
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOjMxNDMxNjI0MA==",
              },
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOjMxNjMyODg2OA==",
              },
            ],
          },
        },
        Object {
          "node": Object {
            "legs": Array [
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOjMyMTMzNzkwMw==",
              },
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOjMxNDMxNjI0MA==",
              },
              Object {
                "arrival": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "departure": Object {
                  "airport": Object {
                    "city": Object {
                      "name": "Mocked City Name",
                    },
                  },
                },
                "id": "TGVnOjMxNjMyODg2OA==",
              },
            ],
          },
        },
      ],
    },
  },
}
`;

exports[`all flights dates should throw error with invalid date range 1`] = `
Object {
  "data": Object {
    "allFlights": null,
  },
  "errors": Array [
    [GraphQLError: Please specify both "from" and "to" while working with date range OR use exact dates.],
  ],
}
`;
